{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import logements from\"../../data_apparts/logements.json\";import\"../../utils/SASS/elements/_tag.scss\";import\"../../utils/SASS/base/_colors.scss\";import\"../../utils/SASS/base/_fonts.scss\";// Composant pour afficher un tag individuel\nimport{jsx as _jsx}from\"react/jsx-runtime\";const Tag=_ref=>{let{tag}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"tags\",children:tag});};// Composant principal pour afficher la liste des tags d'un logement\nconst TagList=()=>{const[logement,setLogement]=useState(null);// Utiliser useEffect pour récupérer le logement sélectionné au chargement du composant\nuseEffect(()=>{const clickedId=localStorage.getItem(\"clickedId\");const foundLogement=logements.find(logement=>logement.id===clickedId);setLogement(foundLogement);},[]);//La condition suivante vérifie si l'objet logement ou la propriété host de logement est null\nif(!logement||!logement.host){return/*#__PURE__*/_jsx(\"div\",{children:\"Chargement...\"});}// Retourner la liste des tags du logement\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"tag_line\",children:logement.tags.map((tag,index)=>/*#__PURE__*/_jsx(Tag,{tag:tag},\"\".concat(logement.id,\"-\").concat(index)))});};export default TagList;","map":{"version":3,"names":["React","useState","useEffect","logements","jsx","_jsx","Tag","_ref","tag","className","children","TagList","logement","setLogement","clickedId","localStorage","getItem","foundLogement","find","id","host","tags","map","index","concat"],"sources":["C:/Users/Micyo/Desktop/Projet_7/src/components/Tag/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport logements from \"../../data_apparts/logements.json\";\r\nimport \"../../utils/SASS/elements/_tag.scss\";\r\nimport \"../../utils/SASS/base/_colors.scss\";\r\nimport \"../../utils/SASS/base/_fonts.scss\";\r\n\r\n// Composant pour afficher un tag individuel\r\nconst Tag = ({ tag }) => <div className=\"tags\">{tag}</div>;\r\n\r\n// Composant principal pour afficher la liste des tags d'un logement\r\nconst TagList = () => {\r\n  const [logement, setLogement] = useState(null);\r\n\r\n  // Utiliser useEffect pour récupérer le logement sélectionné au chargement du composant\r\n  useEffect(() => {\r\n    const clickedId = localStorage.getItem(\"clickedId\");\r\n    const foundLogement = logements.find(\r\n      (logement) => logement.id === clickedId\r\n    );\r\n    setLogement(foundLogement);\r\n  }, []);\r\n\r\n  //La condition suivante vérifie si l'objet logement ou la propriété host de logement est null\r\n  if (!logement || !logement.host) {\r\n    return <div>Chargement...</div>;\r\n  }\r\n\r\n  // Retourner la liste des tags du logement\r\n  return (\r\n    <div className=\"tag_line\">\r\n      {logement.tags.map((tag, index) => (\r\n        <Tag key={`${logement.id}-${index}`} tag={tag} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,SAAS,KAAM,mCAAmC,CACzD,MAAO,qCAAqC,CAC5C,MAAO,oCAAoC,CAC3C,MAAO,mCAAmC,CAE1C;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,GAAG,CAAGC,IAAA,MAAC,CAAEC,GAAI,CAAC,CAAAD,IAAA,oBAAKF,IAAA,QAAKI,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEF,GAAG,CAAM,CAAC,GAE1D;AACA,KAAM,CAAAG,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE9C;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CACnD,KAAM,CAAAC,aAAa,CAAGd,SAAS,CAACe,IAAI,CACjCN,QAAQ,EAAKA,QAAQ,CAACO,EAAE,GAAKL,SAChC,CAAC,CACDD,WAAW,CAACI,aAAa,CAAC,CAC5B,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,GAAI,CAACL,QAAQ,EAAI,CAACA,QAAQ,CAACQ,IAAI,CAAE,CAC/B,mBAAOf,IAAA,QAAAK,QAAA,CAAK,eAAa,CAAK,CAAC,CACjC,CAEA;AACA,mBACEL,IAAA,QAAKI,SAAS,CAAC,UAAU,CAAAC,QAAA,CACtBE,QAAQ,CAACS,IAAI,CAACC,GAAG,CAAC,CAACd,GAAG,CAAEe,KAAK,gBAC5BlB,IAAA,CAACC,GAAG,EAAiCE,GAAG,CAAEA,GAAI,KAAAgB,MAAA,CAAjCZ,QAAQ,CAACO,EAAE,MAAAK,MAAA,CAAID,KAAK,CAAe,CACjD,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAZ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}